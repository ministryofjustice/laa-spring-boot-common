plugins {
    id 'net.researchgate.release'
    id 'checkstyle'
    id 'com.adarshr.test-logger' version '4.0.0'
}

// Set Global Versions

// org.springframework.boot:spring-boot-gradle-plugin
// org.springframework.boot:spring-boot-dependencies
ext.springBootVersion = "3.5.6"

// io.spring.gradle:dependency-management-plugin
ext.springBootDependencyManagementPluginVersion = "1.1.7"

// com.github.ben-manes:gradle-versions-plugin
ext.gradleVersionsPluginVersion = "0.52.0"

// checkstyle
ext.checkstyleVersion = "10.26.0"

// com.adarshr:gradle-test-logger-plugin
ext.testLoggerPluginVersion = "4.0.0"


subprojects {
    // See https://github.com/gradle/gradle/issues/22317
    tasks.withType(Test).configureEach {
        it.jvmArgs = ["--add-opens=java.base/java.lang=ALL-UNNAMED"]
    }

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    apply plugin: 'maven-publish'
    apply plugin: 'com.adarshr.test-logger'

    publishing.repositories {
        maven {
            name = "GitHubPackages"
            url "https://maven.pkg.github.com/ministryofjustice/${rootProject.name}"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    release {
        tagTemplate = '$name-$version'
    }

    tasks.withType(AbstractPublishToMaven).tap {
        configureEach {
            doLast {
                logger.lifecycle("Published Maven artifact: " +
                        "${publication.groupId}:${publication.artifactId}:${publication.version}")
            }
        }
    }
}

tasks.register('updateSnapshotVersion') {
    doLast {
        def gitHash = "git rev-parse --short HEAD".execute().text.trim()
        def propertiesFile = file('gradle.properties')
        def properties = new Properties()
        properties.load(new FileInputStream(propertiesFile))

        def currentVersion = properties.getProperty('version')
        def newVersion = currentVersion.replace('-SNAPSHOT', "-${gitHash}-SNAPSHOT")
        properties.setProperty('version', newVersion)

        properties.store(propertiesFile.newWriter(), null)
    }
}
